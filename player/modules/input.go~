package modules

// Input refers to a keyboard key/controller button input.
// An empty string refers to an unbound (to a button/key) input
// Bound refers to whether a module is bound to this input.
type Input struct {
	Key string `json:"key"`
	Button string `json:"button"`
	Bound bool
}

func NewInput(k string,b string) ModInput {
	return ModInput{k,b,false}
}

func (i ModInput) IsDown() bool {
	// we don't just return this to make implementing controller support easier
	if oak.IsDown(i.Key) {
		return true
	} else {
		// TODO: fix this
		ctrlr := GetPlayer(0).Ctrls.Controller
		if ctrlr != nil {
			st, _ := ctrlr.GetState()
			return st.Buttons[i.Button]
		}
		return false
	}
}
